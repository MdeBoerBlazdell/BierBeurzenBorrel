from drink import Drink

class Borrel:
    """
    Class that runs the entire borrel. Should keep track of current drinks for sale.
    Also keeps track of balance (how much profit/loss is generated by the sale of drinks)
    TODO: allow possibility to import drinks from some kind of config.csv
    TODO: create log and restart function that uses log
    TODO: gracefully fail if input is incorrect
    """

    def __init__(self) -> None:
        self.balance = 0
        self.inventory = {}
        self.initialise_inventory()


    def initialise_inventory(self):
        """
        This will later be changed to read input from a csv file to improve usability
        """
        self.inventory[0] = Drink("Hertog Jan", "0", 80,100,90,50,True)
    
    def help(self) -> None:
        print("\n An overview of supported commands (case is ignored): \n")
        print("reset -> will reset all drink prices to the initial price")
        print("balance -> will display the current balance of the borrel \n")
        print("stats -> will display stats of the borrel \n")

    def print_valid_stock(self) -> None:
        for value in self.inventory.values():
            print(value.identifier())

    def run_borrel(self) -> None:
        self.initialise_inventory()
        id = int(input("ID of the drink sold: >> "))

        while id not in self.inventory:
            print("That input is not valid, please use a valid ID")
            self.print_valid_stock()
            id = int(input("ID of the drink sold: >> "))
        drink = self.inventory[id]

        amount = int(input("Number of drinks sold: >> "))
        while drink.can_sell_amount(amount) == False:
            print("You can not sell this amount of drinks")
            print(f"You can sell at most {self.inventory[id].nr_drinks} bottles")
            amount = int(input("Number of drinks sold: >> "))

b = Borrel()
b.run_borrel()
